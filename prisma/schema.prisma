// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  phone     String   @unique
  role      Role     @default(user)
  tokens    Token[]
  notes     Note[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  collaborators Collaborator[]
}

model Token {
  id        Int      @id @default(autoincrement())
  token     String
  userAgent String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tags      Tag[]    @relation("NoteTags")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  archived  Boolean  @default(false)
  pinned    Boolean  @default(false)
  publicToken String? @unique
  collaborators Collaborator[]
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  notes Note[] @relation("NoteTags")
}

model SmsCode {
  phone String @id
  code  String
}

model Collaborator {
  id       Int      @id @default(autoincrement())
  note     Note     @relation(fields: [noteId], references: [id])
  noteId   Int
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  createdAt DateTime @default(now())
  @@unique([noteId, userId])
}

enum Role {
  user
  admin
  manager
}
